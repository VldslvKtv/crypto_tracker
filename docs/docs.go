// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "support@cryptotracker.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/currency/add": {
            "post": {
                "description": "Добавляет криптовалюту в список отслеживаемых и начинает сбор данных о её цене.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Добавить криптовалюту для отслеживания",
                "operationId": "add-coin",
                "parameters": [
                    {
                        "description": "Данные для добавления криптовалюты",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CoinRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message: Currency added to watchlist",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "error: Coin is already being tracked",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/currency/price": {
            "get": {
                "description": "Возвращает цену криптовалюты на указанный timestamp (timestamp в миллисекундах).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Получить цену криптовалюты",
                "operationId": "get-coin",
                "parameters": [
                    {
                        "description": "Данные для получения цены",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GetPriceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Цена криптовалюты",
                        "schema": {
                            "$ref": "#/definitions/models.Coin"
                        }
                    },
                    "400": {
                        "description": "error: Failed to get price",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error: Failed to get price",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/currency/remove": {
            "post": {
                "description": "Удаляет криптовалюту из списка отслеживаемых и останавливает сбор данных о её цене.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Удалить криптовалюту из отслеживаемых",
                "operationId": "remove-coin",
                "parameters": [
                    {
                        "description": "Данные для удаления криптовалюты",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CoinRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message: Currency removed from watchlist",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "error: Coin field is required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "error: Coin is not tracked",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Coin": {
            "type": "object",
            "properties": {
                "coin": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "timestamp": {
                    "type": "integer"
                }
            }
        },
        "models.CoinRequest": {
            "type": "object",
            "properties": {
                "coin": {
                    "type": "string"
                }
            }
        },
        "models.GetPriceRequest": {
            "type": "object",
            "required": [
                "coin",
                "timestamp"
            ],
            "properties": {
                "coin": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8002",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Crypto Tracker API",
	Description:      "API для отслеживания цен криптовалют.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
